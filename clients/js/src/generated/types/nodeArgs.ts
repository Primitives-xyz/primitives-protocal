/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  array,
  bool,
  string,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  Creator,
  CreatorArgs,
  Properties,
  PropertiesArgs,
  getCreatorSerializer,
  getPropertiesSerializer,
} from '.';

export type NodeArgs = {
  /** The name of the asset */
  label: string;
  properties: Array<Properties>;
  isMutable: boolean;
  creators: Array<Creator>;
};

export type NodeArgsArgs = {
  /** The name of the asset */
  label: string;
  properties: Array<PropertiesArgs>;
  isMutable: boolean;
  creators: Array<CreatorArgs>;
};

export function getNodeArgsSerializer(): Serializer<NodeArgsArgs, NodeArgs> {
  return struct<NodeArgs>(
    [
      ['label', string()],
      ['properties', array(getPropertiesSerializer())],
      ['isMutable', bool()],
      ['creators', array(getCreatorSerializer())],
    ],
    { description: 'NodeArgs' }
  ) as Serializer<NodeArgsArgs, NodeArgs>;
}
